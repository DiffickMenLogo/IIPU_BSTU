import QtQuick 2.12
import QtQuick.Window 2.12
import QtQuick.Controls 2.12
import QtQuick.Layouts 1.12


ApplicationWindow {
    id: feraMnicWindow
    visible: true
    width: 640
    height: 480
    signal signalExit   // Set signals

    Rectangle {
            id: rectangle3

            y: 100
            width:  parent.width
            height: parent.height/1.5
            color: "yellow"
            border.color: "red"
            anchors.onBaselineChanged: parent
            ScrollView{
            anchors.rightMargin: 0
            anchors.bottomMargin: 0
            anchors.leftMargin: 0
            anchors.topMargin: 8
            anchors.fill: parent
            TextArea {
                id: textProc
                x: -10
                y: -13
                width: 408
                height: 309
                placeholderText: qsTr("")
                wrapMode: Text.WordWrap
                font.family: "Courier"
                text :
"
Алгоритм записи в СОМ-порт
1. В БА+3 заносим 1000 0000 для использования БА+0 в качестве делителя частоты
2. В БА+0 занести делитель частоты (максимальная частота 115200/нужная частота)
3. В БА+3 занести 0 в 7-й бит для использования БА+0 в качестве буфера данных, а в 5, 4, 3 - биты контроля
- хх0 – отсутствие бита контроля по чётности/
- 001 – бит контроля формируется по четному паритету;
- 011 – бит контроля формируется по нечётному паритету;
- 101 – бит контроля равен 1;
- 111 – бит контроля равен 0.
4. Из БА+5 считываем 5-й бит. Если 1, то
5. В БА+0 заносим ASCII-код N-го символа данных, возвращаемся на п4, N++

Алгоритм чтения из СОМ-порта

1. В БА+3 заносим 1000 0000 для использования БА+0 в качестве делителя частоты
2. В БА+0 занести делитель частоты (максимальная частота 115200/нужная частота)
3. В БА+3 занести 0 в 7-й бит для использования БА+0 в качестве буфера данных, а в 5, 4, 3 - биты контроля
- хх0 – отсутствие бита контроля по чётности/
- 001 – бит контроля формируется по четному паритету;
- 011 – бит контроля формируется по нечётному паритету;
- 101 – бит контроля равен 1;
- 111 – бит контроля равен 0.
4. Из БА+5 считываем 1-й бит. Если 1, то
5. Из БА+0 считываем ASCII-код N-го символа данных, возвращаемся на п4, N++
"
            }


        }

    }
}
